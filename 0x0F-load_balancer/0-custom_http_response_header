#!/usr/bin/env bash
# duplicate web-01 to web-02
# these scripts are an upgrade from the web-server scripts...

# uncomment to see the script run in action
#set -x

# echo -e "Updating and doing some minor checks...\n"

# function install() {
# 	command -v "$1" &> /dev/null

# 	#shellcheck disable=SC2181
# 	if [ $? -ne 0 ]; then
# 		echo -e "	Installing: $1$\n"
# 		sudo apt-get update -y -qq && \
# 			sudo apt-get install -y "$1" -qq
# 		echo -e "\n"
# 	else
# 		echo -e "	${1} is already installed.\n"
# 	fi
# }

# # Install nginx on web-01 server
#  install nginx #install nginx

# echo -e "\nSetting up some minor stuff.\n"

# # allowing nginx on firewall
# sudo ufw allow 'Nginx HTTP'

# # Give the user ownership to website files for easy editing
# if [ -d "/var/www" ]; then
# 	sudo chown -R "$USER":"$USER" /var/www
# 	sudo chmod -R 755 /var/www
# else
# 	sudo mkdir -p /var/www
# 	sudo chown -R "$USER":"$USER" /var/www
# 	sudo chmod -R 755 /var/www
# fi

# # create directories if not present
# for dir in /var/www/{html,error}; do
# 	if ! [ -d "$dir" ]; then
# 		mkdir -p "$dir"
# 	fi
# done




# # creating new index
# echo "Hello World!" > /var/www/html/index.html

# # create new error page
# echo "Ceci n'est pas une page" > /var/www/html/error_404.html

# # backup default server config file
# sudo cp /etc/nginx/sites-enabled/default nginx-sites-enabled_default.backup

# # Add custom response header to know the server name for debugging
# # Add to the nginx configuration file a error page 404

# server_config=\
# "server {
# 		listen 80 default_server;
# 		listen [::]:80 default_server;
# 		root /var/www/html;
# 		index index.html index.htm index.nginx-debian.html
# 		server_name_;
# 		add_header X-Served-By \$hostname;
# 		location / {
# 			try_files \$uri \$uri/ =404;
# 		}
# 		if (\$request_filename ~ redirect_me){
# 			rewrite ^ https://th3-gr00t.tk/ permanent;
# 		}
# 		error_page 404 /error_404.html;
# 		location = /error_404.html {
# 			internal;
# 		}
# }"

# #shellcheck disable=SC2154
# echo "$server_config" | sudo dd status=none of=/etc/nginx/sites-enabled/default

# if [ "$(pgrep -c nginx)" -le 0 ]; then
# 	sudo service nginx start
# else
# 	sudo service nginx restart
# fi



# configures a new Ubuntu machine

# Install nginx on web-01 server
apt-get -y update
apt-get -y install nginx

# Add custom response header to know the server name for debugging
HOST_NAME=$(hostname)
HEADER="\\\n\tadd_header X-Served-By $HOST_NAME;\n"
FIND=$(grep "X-Server-by" /etc/nginx/sites-available/default)
if [[ -z $FIND ]]; then
    sed -i "23i $HEADER" /etc/nginx/sites-available/default
fi

# Create a firts index.html page
sudo echo "Hello World!" > /var/www/html/index.html

# Add to the nginx configuration file a redirection to another page
FIND=$(grep "redirect_me" /etc/nginx/sites-available/default)
STRING="\\\n\tlocation /redirect_me {\n\t\t return 301 https://www.effiongsamuel.tech;\n\t}\n"
if [[ -z $FIND ]]; then
    sed -i "42i $STRING" /etc/nginx/sites-available/default
fi

# Add to the nginx configuration file a error page 404
FIND=$(grep "error_page 404" /etc/nginx/sites-available/default)
ERROR="\\\n\terror_page 404 /custom_404.html;\n"
if [[ -z $FIND ]]; then
    echo "Ceci n'est pas une page" > /var/www/html/custom_404.html
    sed -i "40i $ERROR" /etc/nginx/sites-available/default
fi

sudo service nginx restart